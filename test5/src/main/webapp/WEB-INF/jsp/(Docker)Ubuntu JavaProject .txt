apt-get install docker.io (밖 우분투에서 도커 깔기)
docker pull ubuntu:16.04 (없을시)

-------------- 컨테이너 생성 --------------
docker run -d --privileged -p{포워딩할 임의 포트}:8080 -p{포워딩할 임의 포트}:3306 --name {컨테이너 이름} ubuntu:16.04 /sbin/init
docker exec -it {컨테이너 이름} /bin/bash


-------------- 우분투 들어올시 ---------
apt-get update
apt-get install git


apt-get install openjdk-8-jre-headless
apt-get install openjdk-8-jdk
java -version

apt-get install tomcat8
/usr/share/tomcat8/bin/version.sh
service tomcat8 start
http://서버의아이피:{도커쪽으로 포워딩할 임의 포트}

***.war ---> /var/lib/tomcat8/webapps/ 파일저장


-------------#mariadb 설치-------------
apt-get update
apt-get install mariadb-server
service mysql restart -> mysql 재기동
mysql_secure_installation -> 비밀번호 초기화 후 y


mysql -u root -p (접속)

show databases;

use [데이터베이스 명<스키마 명>]

use mysql (모든유저 관리) 
{
select * from user\G; (유저들 조회)
update user set plugin='' where user='root' and host = 'localhost'; (root 비번없이 들어가지는것을 방지)
flush privileges;
create user [아이디] @localhost identified by '[비번]'; (유저 추가)
drop user [아이디] @localhost; (유저 삭제)
grant all privileges on [스키마 명].[테이블 명] to 'winbo121' @localhost identified by '[비번]'; (권한주기)
show grants for '[아이디]' @localhost; 
revoke all on [스키마 명].[테이블 명] from '[아이디]' @localhost; (권한삭제)
}

create schema [데이터베이스 명] (데이터베이스<스키마> 만들기)

mysqldump -u [자신아이디] -p [스키마명] > [파일명].sql (데이터베이스 export하기)
mysqldump -u [자신아이디] -p [스키마명] < [파일명].sql (데이터베이스 import하기)

(일반 콘솔창)mysqldump -h [외부 아이피] -u[외부 아이디] -p[외부 비번] [외부에서 가져올 스키마 명] | mysql -u[자신 아이디] -p[자신 비번] [자신의 적용할 <만들어진>스키마 명]; (외부에서 디비 가져오기)


-------------------------------데이터베이스 오라클 -----------------------------------------------

/*인덱스 설정*/
CREATE INDEX userinfo_index on userinfo(name);


/*함수 설정*/
CREATE or REPLACE FUNCTION userinfo_function1 (test VARCHAR2) RETURN VARCHAR2 
	IS num1 NUMBER;
    
   BEGIN
	    
  	IF TEST = 'EX1' THEN
      		SELECT count(*) INTO  num1 FROM userinfo;
      
 	ELSIF TEST = 'EX2' THEN
        	SELECT count(*)+10 INTO  num1 FROM userinfo;
        
    	END IF;
    
      RETURN num1;
        
   END userinfo_function1;


/*함수 확인*/
SELECT userinfo_function1('EX2') FROM DUAL;


/*시퀀스 생성*/
CREATE SEQUENCE idx_userinfo INCREMENT BY 1 MINVALUE 1 MAXVALUE 999999;


/*시퀀스 증가 및 조회*/
SELECT idx_userinfo.nextVal FROM DUAL;


/*사용자가 만든 시퀀스 목록 조회*/
SELECT * FROM user_sequences;


/*프로시저 만들기*/
CREATE  PROCEDURE auto_input (num1 IN NUMBER)
IS
    vn_num NUMBER := num1;
BEGIN

    LOOP
    
     insert into userinfo (name,password) values (concat('test',idx_userinfo.nextVal),'9999');
     
     dbms_output.put_line(vn_num); <-콘솔로 숫자 찍기
     
     vn_num := vn_num+1;
     
     EXIT WHEN vn_num > 10;
     
    END LOOP;

END;


/*콘솔 찍기위한 옵션켜기*/
SET SERVEROUTPUT ON;


/*프로시저 실행*/
EXECUTE auto_input(0);


/*프로시저 삭제*/
DROP PROCEDURE auto_input;


/*콤마로 한꺼번에 정리해서 name과 password 출력 */
select LISTAGG(name, ',') within group (order by name asc) AS NAMES , LISTAGG(PASSWORD, ',') within group (order by name asc) AS NAMES from userinfo;



/*mysql 프로시저*/
DELIMITER $$
 DROP PROCEDURE IF EXISTS test_mysql_while_loop$$
 CREATE PROCEDURE test_mysql_while_loop()
 BEGIN
 DECLARE x INT;
 
 SET x = 0;

 
 WHILE x  <= 100 DO

insert into userinfo values (concat('test',x),7878);

 SET  x = x + 1; 
 END WHILE;
 
 END
 $$ DELIMITER ;
 
 /*프로시저 호출*/
 CALL test_mysql_while_loop();





<<우분투 오라클 설치 명령어>>
https://www.oracle.com/database/technologies/xe-prior-releases.html 다운로드 받는곳

docker cp oracle-xe-11.2.0-1.0.x86_64.rpm.zip <컨테이너 이름>:/

apt-get install bc

unzip oracle*

cd Disk1/

apt-get -y install alien libaio1 unixodbc

alien --scripts -d oracle*

dpkg --install oracle*.deb

apt-get install net-tools

/etc/init.d/oracle-xe configure

systemctl start oracle-xe

systemctl status oracle-xe

vim /etc/bash.bashrc  -> 맨 밑에 . /u01/app/oracle/product/11.2.0/xe/bin/oracle_env.sh 추가

mkdir /oradata

chmod 777 /oradata/

cd /etc/init.d

apt-get remove insserv

vim oracle

<추가     
#!/bin/bash
su - oracle
. /u01/app/oracle/product/11.2.0/xe/bin/oracle_env.sh
systemctl start oracle-xe

### BEGIN INIT INFO
# Provides:          dovecot
# Required-Start:    $local_fs $network
# Required-Stop:     $local_fs
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: dovecot
# Description:       dovecot pop & imap daemon
### END INIT INFO >

ll /etc/rc* | grep oracle

reboot

systemctl status oracle-xe

mkdir -p /u01/app/oracle/product/11.2.0/xe

chown -R oracle.dba /u01/

su - oracle

/u01/app/oracle/product/11.2.0/xe/bin/createdb.sh

sqlplus / as sysdba



